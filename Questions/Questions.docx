1.	Классы и структуры, отличия.

2.	Чем отличаются константы и поля, доступные только для чтения.

3.	Когда использовать StringBuilder предпочтительнее, чем string

4.	Основные парадигмы ООП.

5.	Какой интерфейс должна поддерживать коллекция чтобы можно было ее  использховать в foreach

6.	В чем различие между ключевыми словами "ref" и "out"?

7.	Конструктор, виды конструкторов

1.Класс является ссылочным типом т.е. когда создаём объект класса и сохраняем его в переменную, то эта переменная содержит только ссылку на память объекта. Структура является типом значения т.е. при создании структуры переменная, которой присвоена структура, содержит фактические данные этой структуры.

2.Значение константы можно установить только один раз и к моменту компиляции они должны быть определены, это статическое поле. Используется ключевое слово const.
Поля доступные для чтения можно инициализировать при их объявлении на уровне класса, либо инициализировать и изменять в конструкторе.  Инициализировать или изменять их значение в других местах нельзя, можно только считывать их значение. Используется ключевое слово readonly.

3.Когда работаем с большим количеством строк. Объекты класса string неизменяемы, поэтому при каждом изменении строки создаётся новый объект в памяти.
4. Абстракция - позволяет уменьшить связывание между компонентами предоставляя дополнительный слой между ними, для того чтоб один объект не зависел от того, как другой реализует свои бизнес-правила. 
Инкапсуляция - позволяет работать абстракции пряча детали реализации класса от вызывающих его. (Публичные и приватные поля)
Наследование - позволяет родительским классам содержать общую функциональность и передавать ее всем своим классам-потомкам. 
Полиморфизм - позволяет реализовывать одноименные публичные методы, позволяя различным классам выполнять различные действия при одном и том же вызове. 

5. IEnumerable

6.Out-параметр необходимо инициализировать в функции, нельзя использовать его значение в функции до присваивания. Ref-параметр должен передаваться инициализированным, виден снаружи функции.

7.Конструктор – метод класса. Вызывается при создании нового объекта данного класса, выполняют инициализацию объекта.
Если в классе не определено ни одного конструктора, то автоматически создаётся конструктор без параметров.
Существует еще конструктор по умолчанию, он не принимает никаких параметров, для создания объекта используют new.
И есть еще конструктор с параметрами.
